/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2022-06-13 07:54:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.egovframework.example.hjb;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class hjbMap_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/EGIS/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/test/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1612850416000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>2D MAP 기능구현 홍정범</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/css/ol.css\"\r\n");
      out.write("\ttype=\"text/css\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/build/ol.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-2.2.3.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL\"></script>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("* {\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("\tlist-style: none;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*메뉴옵션*/\r\n");
      out.write(".wrapper {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\ttop: 50%;\r\n");
      out.write("\tleft: 90%;\r\n");
      out.write("\ttransform: translate(-50%, -50%);\r\n");
      out.write("\tz-index: 99;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mainMenu {\r\n");
      out.write("\twidth: 250px;\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tborder-radius: 10px;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".item {\r\n");
      out.write("\tborder-top: 1px solid #ef584a;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tpadding: 15px 20px;\r\n");
      out.write("\tbackground-color: #ff6f61;\r\n");
      out.write("\tcolor: #fff;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn:before {\r\n");
      out.write("\tcontent: '';\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 0;\r\n");
      out.write("\theight: 0;\r\n");
      out.write("\tborder-left: 8px solid transparent;\r\n");
      out.write("\tborder-right: 8px solid transparent;\r\n");
      out.write("\tborder-top: 10px solid #ff6f61;\r\n");
      out.write("\tright: 15px;\r\n");
      out.write("\tbottom: -10px;\r\n");
      out.write("\tz-index: 9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn i {\r\n");
      out.write("\tmargin-right: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".subMenu {\r\n");
      out.write("\tbackground: #273057;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\ttransition: max-height 0.7s;\r\n");
      out.write("\tmax-height: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".subMenu a {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tpadding: 15px 20px;\r\n");
      out.write("\tcolor: #fff;\r\n");
      out.write("\tfont-size: 14px;\r\n");
      out.write("\tborder-bottom: 1px solid #394c7f;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".subMenu a:before {\r\n");
      out.write("\tcontent: '';\r\n");
      out.write("\topacity: 0;\r\n");
      out.write("\ttransition: opacity 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".subMenu a:hover:before {\r\n");
      out.write("\tcontent: '';\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\theight: 0;\r\n");
      out.write("\twidth: 6px;\r\n");
      out.write("\tleft: 0;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\topacity: 1;\r\n");
      out.write("\t/* background-color: #d8d824; */\r\n");
      out.write("\tborder-top: 24px solid transparent;\r\n");
      out.write("\tborder-left: 11px solid #fcdc29;\r\n");
      out.write("\tborder-bottom: 24px solid transparent;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".subMenu a:after {\r\n");
      out.write("\tcontent: '';\r\n");
      out.write("\topacity: 0;\r\n");
      out.write("\ttransition: opacity 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".subMenu a:hover:after {\r\n");
      out.write("\tcontent: '';\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\theight: 0;\r\n");
      out.write("\twidth: 6px;\r\n");
      out.write("\tright: 0px;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\topacity: 1;\r\n");
      out.write("\t/* background-color: #d8d824; */\r\n");
      out.write("\tborder-top: 24px solid transparent;\r\n");
      out.write("\tborder-right: 11px solid #fcdc29;\r\n");
      out.write("\tborder-bottom: 24px solid transparent;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".subMenu a:hover {\r\n");
      out.write("\tbackground: #273057;\r\n");
      out.write("\tbackground: -moz-linear-gradient(top, #273057 0%, #273057 50%, #394c7f 51%, #394c7f\r\n");
      out.write("\t\t100%);\r\n");
      out.write("\tbackground: -webkit-linear-gradient(top, #273057 0%, #273057 50%, #394c7f 51%,\r\n");
      out.write("\t\t#394c7f 100%);\r\n");
      out.write("\tbackground: linear-gradient(to bottom, #273057 0%, #273057 50%, #394c7f 51%, #394c7f\r\n");
      out.write("\t\t100%);\r\n");
      out.write("\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#273057',\r\n");
      out.write("\t\tendColorstr='#394c7f', GradientType=0);\r\n");
      out.write("\ttransition: all 0.3s;\r\n");
      out.write("\tborder-bottom: 1px solid #394c7f;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".subMenu a:last-child {\r\n");
      out.write("\tborder: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".item:target .subMenu {\r\n");
      out.write("\tmax-height: 10em;\r\n");
      out.write("}\r\n");
      out.write("/*마우스 옵션*/\r\n");
      out.write(".tooltip {\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tbackground: rgba(0, 0, 0, 0.5);\r\n");
      out.write("\tborder-radius: 4px;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tpadding: 4px 8px;\r\n");
      out.write("\topacity: 0.7;\r\n");
      out.write("\twhite-space: nowrap;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".tooltip-measure {\r\n");
      out.write("\topacity: 1;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".tooltip-static {\r\n");
      out.write("\tbackground-color: #ffcc33;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tborder: 1px solid white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".tooltip-measure:before, .tooltip-static:before {\r\n");
      out.write("\tborder-top: 6px solid rgba(0, 0, 0, 0.5);\r\n");
      out.write("\tborder-right: 6px solid transparent;\r\n");
      out.write("\tborder-left: 6px solid transparent;\r\n");
      out.write("\tcontent: \"\";\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbottom: -6px;\r\n");
      out.write("\tmargin-left: -7px;\r\n");
      out.write("\tleft: 50%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".tooltip-static:before {\r\n");
      out.write("\tborder-top-color: #ffcc33;\r\n");
      out.write("}\r\n");
      out.write("/* 지도 */\r\n");
      out.write(".ol-mycontrol {\r\n");
      out.write("\tbackground-color: rgba(241, 12, 43, 0.4);\r\n");
      out.write("\tborder-radius: 4px;\r\n");
      out.write("\tpadding: 4px;\r\n");
      out.write("\tmargin-left: 10px;\r\n");
      out.write("\tposition: block;\r\n");
      out.write("\twidth: 85px;\r\n");
      out.write("\tbottom: 30px;\r\n");
      out.write("\tright: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ol-mycontrol button {\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ol-mycontrol button.on {\r\n");
      out.write("\tbackground-color: rgba(124, 60, 55, .5);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ol-attribution {\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<header\r\n");
      out.write("\t\tstyle=\"text-align: center; font-size: 50px; border-bottom: thick double #32a1ce;\">\r\n");
      out.write("\t\t신입개발과제 - 홍정범\t</header>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"map\" style=\"width: 100%; height: 700px; left: 0px; top: 0px\">\r\n");
      out.write("\t\t<!-- 검색 폼  -->\r\n");
      out.write("\t\t<div style=\"z-index: 99;\">\r\n");
      out.write("\t\t\t<form id=\"searchForm\" action=\"#\" class=\"form_data\"\r\n");
      out.write("\t\t\t\tonsubmit=\"return false;search();\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"page\" value=\"1\" /> <input type=\"hidden\"\r\n");
      out.write("\t\t\t\t\tname=\"type\" value=\"address\" /> <input type=\"hidden\" name=\"request\"\r\n");
      out.write("\t\t\t\t\tvalue=\"search\" /> <input type=\"hidden\" name=\"size\" value=\"100\" />\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"apiKey\"\r\n");
      out.write("\t\t\t\t\tvalue=\"10036FCE-3940-374C-B2ED-E6FBDF47CFA9\" /> <input\r\n");
      out.write("\t\t\t\t\ttype=\"hidden\" name=\"domain\" value=\"http://localhost:8080\" /> <input\r\n");
      out.write("\t\t\t\t\ttype=\"hidden\" name=\"crs\" value=\"EPSG:3857\" />\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"searchValue\" name=\"query\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"대구광역시 수성구 알파시티1로 31길 2\" style=\"width: 300px;\" />\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" onclick=\"javascript:search();\">검색</button>\r\n");
      out.write("\t\t\t\t\t<!-- a\r\n");
      out.write("\t\t\t\t\t\thref=\"javascript:search();\" class=\"btn1\">검색</a -->\r\n");
      out.write("\t\t\t\t\t<!--input type=\"checkbox\" id=\"onoff\" />WMS ON/OFF-->\r\n");
      out.write("\t\t\t\t\t<select name=\"category\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"road\">도로명</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"parcel\">지번</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id = \"info\" style=\"border:solid 2px;\"> </div>\r\n");
      out.write("\t<!-- form class=\"form-inline\">\r\n");
      out.write("\t\t<label>Measurement type &nbsp;</label> <select id=\"type\">\r\n");
      out.write("\t\t\t<option value=\"length\">Length (LineString)</option>\r\n");
      out.write("\t\t\t<option value=\"area\">Area (Polygon)</option>\r\n");
      out.write("\t\t\t<option value=\"Point\">Point</option>\r\n");
      out.write("\t\t\t<option value=\"Circle\">Circle</option>\r\n");
      out.write("\t\t\t<option value=\"Select\">선택</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t</form-->\r\n");
      out.write("\t<div class=\"wrapper\">\r\n");
      out.write("\t\t<ui class=\"mainMenu\">\r\n");
      out.write("\t\t<li class=\"item\" id=\"account\"><a href=\"#account\" class=\"btn\"><i\r\n");
      out.write("\t\t\t\tclass=\"fas fa-user-circle\"></i>OPENLAYERS</a>\r\n");
      out.write("\t\t\t<div class=\"subMenu\">\r\n");
      out.write("\t\t\t\t<form class=\"form-inline\">\r\n");
      out.write("\t\t\t\t\t<!-- <label>Measurement type &nbsp;</label>  -->\r\n");
      out.write("\t\t\t\t\t<select id=\"type\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"length\">거리측정</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"area\">면적측정</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"Point\" selected>마커</option>\r\n");
      out.write("\t\t\t\t\t\t<!-- <option value=\"Circle\">Circle</option> -->\r\n");
      out.write("\t\t\t\t\t\t<option value=\"Select\">선택</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t<span style=\"color: white;\"> 작업제목 <input type=\"text\"\r\n");
      out.write("\t\t\t\t\tid=\"subj\" /> 작업내용 <textarea id=\"cont\"></textarea>\r\n");
      out.write("\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"javascript:all_delete();\">모두삭제</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div></li>\r\n");
      out.write("\t\t<li class=\"item\" id=\"about\"><a href=\"#about\" class=\"btn\"><i\r\n");
      out.write("\t\t\t\tclass=\"fas fa-address-card\"></i>GEOSERVER</a>\r\n");
      out.write("\t\t\t<div class=\"subMenu\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"javascript:sig();\" name=\"importwms\">'시군구'\r\n");
      out.write("\t\t\t\t\t주제도</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"javascript:sigdelete();\"\r\n");
      out.write("\t\t\t\t\tname=\"importwms\">'시군구' 삭제</button>\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"javascript:ctp();\" name=\"importwms\">'시도'\r\n");
      out.write("\t\t\t\t\t주제도</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"javascript:ctpdelete();\"\r\n");
      out.write("\t\t\t\t\tname=\"importwms\">'시도' 삭제</button>\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"javascript:iconOn();\"\r\n");
      out.write("\t\t\t\t\tname=\"importwms\">'졸음쉼터 on'</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"javascript:iconOff();\"\r\n");
      out.write("\t\t\t\t\tname=\"importwms\">'졸음쉼터 off'</button>\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t</div></li>\r\n");
      out.write("\t\t</ui>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- div>\r\n");
      out.write("\t\t작업제목 <input type=\"text\" id=\"subj\" /> 작업내용\r\n");
      out.write("\t\t<textarea id=\"cont\"></textarea>\r\n");
      out.write("\t</div-->\r\n");
      out.write("\t<div id=\"mouseCoordinate\"\r\n");
      out.write("\t\tstyle=\"text-align: center; margin-top: 30px; border: thick double #32a1ce;\">현재\r\n");
      out.write("\t\t마우스좌표</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- div>\r\n");
      out.write("      <label><input type=\"checkbox\" id=\"mkImg\"\r\n");
      out.write("\t\t\tvalue=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"\r\n");
      out.write("\t\t\tchecked=\"on\"> \r\n");
      out.write("\t\t\t<img style=\"width: 50px; height: 50px;\"src=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\"\r\n");
      out.write("\t\t\talt=\"\" /> </label>\r\n");
      out.write("\t\t\t<label><input type=\"checkbox\" id=\"mkImg\"\r\n");
      out.write("\t\t\tvalue=\"");
      if (_jspx_meth_c_005furl_005f2(_jspx_page_context))
        return;
      out.write("\">\r\n");
      out.write("\t\t\t<img style=\"width: 50px; height: 50px;\"src=\"");
      if (_jspx_meth_c_005furl_005f3(_jspx_page_context))
        return;
      out.write("\"\r\n");
      out.write("\t\t\talt=\"\" /> </label>\r\n");
      out.write("\t\t\t<label><input type=\"checkbox\" id=\"mkImg\"\r\n");
      out.write("\t\t\tvalue=\"");
      if (_jspx_meth_c_005furl_005f4(_jspx_page_context))
        return;
      out.write("\">\r\n");
      out.write("\t\t\t<img style=\"width: 50px; height: 50px;\"src=\"");
      if (_jspx_meth_c_005furl_005f5(_jspx_page_context))
        return;
      out.write("\"\r\n");
      out.write("\t\t\talt=\"\" /> </label>\r\n");
      out.write("      </div-->\r\n");
      out.write("\t<div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 데이터 API 폼  -->\r\n");
      out.write("\t\t<form id=\"dataForm\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"key\"\r\n");
      out.write("\t\t\t\tvalue=\"10036FCE-3940-374C-B2ED-E6FBDF47CFA9\"> <input\r\n");
      out.write("\t\t\t\ttype=\"hidden\" name=\"domain\" value=\"http://localhost:8080\"> <input\r\n");
      out.write("\t\t\t\ttype=\"hidden\" name=\"service\" value=\"data\"> <input\r\n");
      out.write("\t\t\t\ttype=\"hidden\" name=\"version\" value=\"2.0\"> <input\r\n");
      out.write("\t\t\t\ttype=\"hidden\" name=\"request\" value=\"getfeature\"> <input\r\n");
      out.write("\t\t\t\ttype=\"hidden\" name=\"format\" value=\"json\"> <input\r\n");
      out.write("\t\t\t\ttype=\"hidden\" name=\"size\" value=\"1000\"> <input type=\"hidden\"\r\n");
      out.write("\t\t\t\tname=\"page\" value=\"1\"> <input type=\"hidden\" name=\"data\"\r\n");
      out.write("\t\t\t\tvalue=\"LT_C_SPBD\"> <input type=\"hidden\" name=\"geometry\"\r\n");
      out.write("\t\t\t\tvalue=\"true\"> <input type=\"hidden\" name=\"attribute\"\r\n");
      out.write("\t\t\t\tvalue=\"true\"> <input type=\"hidden\" name=\"crs\"\r\n");
      out.write("\t\t\t\tvalue=\"EPSG:900913\">\r\n");
      out.write("\t\t\t<!-- <input type=\"hidden\" name=\"geomfilter\" value=\"BOX(14028876.609587036,3912653.333809428,14151175.854843318,3974414.4526638505)\"> -->\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"geomfilter\"\r\n");
      out.write("\t\t\t\tvalue=\"POINT(14028876.609587036 3912653.333809428)\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div style=\"border-style: groove; padding: 10px;\">\r\n");
      out.write("\t\t<P class=\"noticePrev\">검색결과\r\n");
      out.write("\t\t<p class=\"notice\" style=\"display: none; color: red;\">클릭시 해당 좌표로\r\n");
      out.write("\t\t\t이동합니다\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<p id=\"result_count\" style=\"text-align: center;\"></p>\r\n");
      out.write("\t\t<ul id=\"result_ajax\">\r\n");
      out.write("\t\t\t<!--검색결과 ajax 장소, count 개수-->\r\n");
      out.write("\t\t\t<li></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\r\n");
      out.write("\t\t<p id=\"result_pos\"></p>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t// 지오서버 wms//\r\n");
      out.write("\tvar sigWms = new ol.layer.Tile({\r\n");
      out.write("            opacity:0.5,\r\n");
      out.write("            \r\n");
      out.write("            source : new ol.source.TileWMS({\r\n");
      out.write("                url : 'http://localhost:8090/geoserver/cite/wms?service=WMS', // 1. 레이어 URL\r\n");
      out.write("                params : {\r\n");
      out.write("                    'VERSION' : '1.1.0', // 2. 버전\r\n");
      out.write("                    'LAYERS' : 'cite:Sigoracle', // 3. 작업공간:레이어 명\r\n");
      out.write("                    \r\n");
      out.write("                    'SRS' : 'EPSG:3857', // SRID\r\n");
      out.write("                    'FORMAT' : 'image/png' // 포맷\r\n");
      out.write("                },\r\n");
      out.write("                \r\n");
      out.write("                serverType : 'geoserver',\r\n");
      out.write("            })\r\n");
      out.write("        });\r\n");
      out.write("        var ctpWms = new ol.layer.Tile({\r\n");
      out.write("            opacity:0.5,\r\n");
      out.write("            source : new ol.source.TileWMS({\r\n");
      out.write("                url : 'http://localhost:8090/geoserver/cite/wms?service=WMS', // 1. 레이어 URL\r\n");
      out.write("                params : {\r\n");
      out.write("                    'VERSION' : '1.1.0', // 2. 버전\r\n");
      out.write("                    'LAYERS' : 'cite:CTPRVN_INFO', // 3. 작업공간:레이어 명\r\n");
      out.write("                    \r\n");
      out.write("                    'SRS' : 'EPSG:3857', // SRID\r\n");
      out.write("                    'FORMAT' : 'image/png' // 포맷\r\n");
      out.write("                },\r\n");
      out.write("                \r\n");
      out.write("                serverType : 'geoserver',\r\n");
      out.write("            })\r\n");
      out.write("        });\r\n");
      out.write("        var iconWms = new ol.layer.Tile({\r\n");
      out.write("            opacity:1,\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            source : new ol.source.TileWMS({\r\n");
      out.write("                url : 'http://localhost:8090/geoserver/cite/wms?service=WMS', // 1. 레이어 URL\r\n");
      out.write("                params : {\r\n");
      out.write("                    'VERSION' : '1.1.0', // 2. 버전\r\n");
      out.write("                    'LAYERS' : 'cite:icon', // 3. 작업공간:레이어 명\r\n");
      out.write("                    \r\n");
      out.write("                    'SRS' : 'EPSG:3857', // SRID\r\n");
      out.write("                    'FORMAT' : 'image/png' // 포맷\r\n");
      out.write("                },\r\n");
      out.write("                \r\n");
      out.write("                serverType : 'geoserver',\r\n");
      out.write("            })\r\n");
      out.write("        });\r\n");
      out.write("           \r\n");
      out.write("\r\n");
      out.write("    function sig(){\r\n");
      out.write("        map.addLayer(sigWms);\r\n");
      out.write("    }\r\n");
      out.write("\tfunction ctp(){\r\n");
      out.write("       \r\n");
      out.write("        map.addLayer(ctpWms);\r\n");
      out.write("    }\r\n");
      out.write("\tfunction iconOn(){\r\n");
      out.write("        \r\n");
      out.write("        map.addLayer(iconWms);\r\n");
      out.write("        //icon 의 정보 불러오기\r\n");
      out.write("            var view = map.getView();\r\n");
      out.write("            map.on('singleclick', function (evt) {\r\n");
      out.write("            document.getElementById('info').innerHTML = '';\r\n");
      out.write("                var viewResolution = /** @type {number} */ (view.getResolution());\r\n");
      out.write("                var source = iconWms.getSource();\r\n");
      out.write("                var url = source.getFeatureInfoUrl(\r\n");
      out.write("                    evt.coordinate,\r\n");
      out.write("                    viewResolution,\r\n");
      out.write("                    'EPSG:3857',\r\n");
      out.write("                    {'INFO_FORMAT': 'text/html'}\r\n");
      out.write("                );\r\n");
      out.write("                //console.log(url);\r\n");
      out.write("                if (url) {\r\n");
      out.write("                    fetch(url)\r\n");
      out.write("                    .then((response) => response.text())\r\n");
      out.write("                    .then((html) => {\r\n");
      out.write("                        document.getElementById('info').innerHTML = html;\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    function sigdelete(){\r\n");
      out.write("            map.removeLayer(sigWms);            \r\n");
      out.write("    }\r\n");
      out.write("    function ctpdelete(){\r\n");
      out.write("            map.removeLayer(ctpWms);            \r\n");
      out.write("    }\r\n");
      out.write("    function iconOff(){\r\n");
      out.write("            map.removeLayer(iconWms);            \r\n");
      out.write("    }\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tfunction all_delete(){\r\n");
      out.write("        map.getLayers().forEach(layer => layer.getSource().refresh());\r\n");
      out.write("        map.getOverlays().getArray().slice(0).forEach(function(overlay) {\r\n");
      out.write("            map.removeOverlay(overlay);\r\n");
      out.write("            });\r\n");
      out.write("    }\r\n");
      out.write("\t\r\n");
      out.write("\tvar VworldBase,VworldSatellite,/*VworldGray,VworldMidnight,*/VworldHybrid;\r\n");
      out.write("\tvar attr = '&copy; <a href=\"\">EGIS홍정범</a>';\r\n");
      out.write("\tvar VworldHybrid = new ol.source.XYZ({\r\n");
      out.write("\t\turl: 'http://api.vworld.kr/req/wmts/1.0.0/10036FCE-3940-374C-B2ED-E6FBDF47CFA9/Hybrid/{z}/{y}/{x}.png'\r\n");
      out.write("\t}); //문자 타일 레이어\r\n");
      out.write("\t\r\n");
      out.write("\tvar VworldSatellite = new ol.source.XYZ({\r\n");
      out.write("\t\turl: 'http://api.vworld.kr/req/wmts/1.0.0/10036FCE-3940-374C-B2ED-E6FBDF47CFA9/Satellite/{z}/{y}/{x}.jpeg'\r\n");
      out.write("\t\t,attributions : attr\r\n");
      out.write("\t}); //항공사진 레이어 타일\r\n");
      out.write("\r\n");
      out.write("\tvar VworldBase = new ol.source.XYZ({\r\n");
      out.write("\t\turl: 'http://api.vworld.kr/req/wmts/1.0.0/10036FCE-3940-374C-B2ED-E6FBDF47CFA9/Base/{z}/{y}/{x}.png'\r\n");
      out.write("\t\t,attributions : attr\r\n");
      out.write("\t}); // 기본지도 타일\r\n");
      out.write("\r\n");
      out.write("\t/*\r\n");
      out.write("\t\tcontrol 설정\r\n");
      out.write("\t*/\r\n");
      out.write("\t\r\n");
      out.write("\tvar base_button = document.createElement('button');\r\n");
      out.write("\tbase_button.innerHTML = 'B';\r\n");
      out.write("\tvar hybrid_button = document.createElement('button');\r\n");
      out.write("\thybrid_button.innerHTML = 'H';\r\n");
      out.write("\thybrid_button.className='on';\r\n");
      out.write("\tvar sate_button = document.createElement('button');\r\n");
      out.write("\tsate_button.innerHTML = 'S';\r\n");
      out.write("    var element = document.createElement('div');\r\n");
      out.write("    element.className = 'rotate-north ol-unselectable ol-control ol-mycontrol';\r\n");
      out.write("    \r\n");
      out.write("    base_button.onclick=function(){\r\n");
      out.write("        map.getLayers().forEach(function(layer){\r\n");
      out.write("\t\t\tif(layer.get(\"name\")==\"vworld\"){\r\n");
      out.write("\t\t\t\tlayer.setSource(VworldBase)\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t    })\r\n");
      out.write("    }\r\n");
      out.write("    sate_button.onclick=function(){\r\n");
      out.write("        map.getLayers().forEach(function(layer){\r\n");
      out.write("\t\t\tif(layer.get(\"name\")==\"vworld\"){\r\n");
      out.write("\t\t\t\tlayer.setSource(VworldSatellite)\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t    })\r\n");
      out.write("    }\r\n");
      out.write("    hybrid_button.onclick=function(){\r\n");
      out.write("    \tvar _this = this;\r\n");
      out.write("   \t\tmap.getLayers().forEach(function(layer){\r\n");
      out.write("   \t\t\tif(layer.get(\"name\")==\"hybrid\"){\r\n");
      out.write("   \t\t\t\tif(_this.className == \"on\"){\r\n");
      out.write("    \t\t\t\tlayer.setSource(null)\r\n");
      out.write("    \t\t\t\t_this.className =\"\";\r\n");
      out.write("   \t\t\t\t}else{\r\n");
      out.write("   \t\t\t\t\t_this.className =\"on\";\r\n");
      out.write("   \t\t\t\t\t\r\n");
      out.write("   \t\t\t\t\tlayer.setSource(VworldHybrid)\r\n");
      out.write("   \t\t\t\t}\r\n");
      out.write("   \t\t\t}\r\n");
      out.write("   \t    })\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    element.appendChild(base_button);\r\n");
      out.write("    element.appendChild(sate_button);\r\n");
      out.write("    element.appendChild(hybrid_button);\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    var layerControl = new ol.control.Control({element: element});\r\n");
      out.write("////////////////////////////////////////////////\r\n");
      out.write("    var source = new ol.source.Vector({\r\n");
      out.write("          id: \"sourceId\"\r\n");
      out.write("        });\r\n");
      out.write("        source.set(\"name\", \"sourceName\");\r\n");
      out.write("\r\n");
      out.write("        var vector = new ol.layer.Vector({\r\n");
      out.write("          id: \"vectorId\",\r\n");
      out.write("          source: source,\r\n");
      out.write("          style: new ol.style.Style({\r\n");
      out.write("            fill: new ol.style.Fill({\r\n");
      out.write("              color: 'rgba(52, 0, 0, 0.35)'\r\n");
      out.write("            }),\r\n");
      out.write("            stroke: new ol.style.Stroke({\r\n");
      out.write("              color: '#000',\r\n");
      out.write("              width: 4\r\n");
      out.write("            }),\r\n");
      out.write("            image: new ol.style.Icon(({\r\n");
      out.write("              anchor: [0.5, 10],\r\n");
      out.write("              anchorXUnits: 'fraction',\r\n");
      out.write("              anchorYUnits: 'pixels',\r\n");
      out.write("              src: 'http://map.vworld.kr/images/ol3/marker_blue.png' //'https://openlayers.org/en/v3.20.1/examples/data/icon.png' 'http://map.vworld.kr/images/ol3/marker.png'\r\n");
      out.write("            }))\r\n");
      out.write("\r\n");
      out.write("          })\r\n");
      out.write("        });\r\n");
      out.write("        vector.set(\"name\", \"vectorName\");\r\n");
      out.write("        vector.setZIndex(1000);\r\n");
      out.write("\r\n");
      out.write("        var sketch;\r\n");
      out.write("\r\n");
      out.write("        var helpTooltipElement;\r\n");
      out.write("\r\n");
      out.write("        var helpTooltip;\r\n");
      out.write("\r\n");
      out.write("        var measureTooltipElement;\r\n");
      out.write("\r\n");
      out.write("        var measureTooltip;\r\n");
      out.write("\r\n");
      out.write("        var continuePolygonMsg = '폴리곤을 그리시오(두번클릭시 종료)';\r\n");
      out.write("\r\n");
      out.write("        var continueLineMsg = '선을 그리시오(두번클릭시 종료)';\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        var pointerMoveHandler = function (evt) {\r\n");
      out.write("          if (evt.dragging) {\r\n");
      out.write("            return;\r\n");
      out.write("          }\r\n");
      out.write("          var helpMsg = '지도를 움직이세요.';\r\n");
      out.write("\r\n");
      out.write("          if (sketch) {\r\n");
      out.write("            var geom = (sketch.getGeometry());\r\n");
      out.write("            if (geom instanceof ol.geom.Polygon) {\r\n");
      out.write("              helpMsg = continuePolygonMsg;\r\n");
      out.write("            } else if (geom instanceof ol.geom.LineString) {\r\n");
      out.write("              helpMsg = continueLineMsg;\r\n");
      out.write("            }\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          helpTooltipElement.innerHTML = helpMsg;\r\n");
      out.write("          helpTooltip.setPosition(evt.coordinate);\r\n");
      out.write("\r\n");
      out.write("          helpTooltipElement.classList.remove('hidden');\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("            ///////////////////////////////////////////////\r\n");
      out.write("            var mouseControlCoordinate = new ol.control.MousePosition({\r\n");
      out.write("\t\t\tcoordinateFormat : new ol.coordinate.createStringXY(4),\r\n");
      out.write("\t\t\tprojection : 'EPSG:4326',//좌표계 설정\r\n");
      out.write("\t\t\tclassName : 'mposition', //css 클래스 이름\r\n");
      out.write("\t\t\ttarget : document.getElementById('mouseCoordinate'),//좌표를 뿌릴 element\r\n");
      out.write("\t\t});\r\n");
      out.write("            /////////////////////////////////////////////\r\n");
      out.write("            \r\n");
      out.write("    \r\n");
      out.write("\tmap = new ol.Map({\r\n");
      out.write("\t\tcontrols: ol.control.defaults().extend([\r\n");
      out.write("\t\t\tlayerControl,mouseControlCoordinate/*new ol.control.OverviewMap(),new ol.control.ZoomSlider()*/\r\n");
      out.write("\t\t]),\r\n");
      out.write("\t\tlayers: [\r\n");
      out.write("\t\t\tnew ol.layer.Tile({\r\n");
      out.write("\t\t\t\tsource: new ol.source.OSM(),\r\n");
      out.write("\t\t\t\tname:\"OSM\"\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t,new ol.layer.Tile({\r\n");
      out.write("\t\t\t\tsource: VworldSatellite,\r\n");
      out.write("\t\t\t\tname:\"vworld\"\r\n");
      out.write("\t\t\t}),new ol.layer.Tile({\r\n");
      out.write("\t\t\t\tsource: VworldHybrid,\r\n");
      out.write("\t\t\t\tname:\"hybrid\"\r\n");
      out.write("\t\t\t}),\r\n");
      out.write("\t\t\tvector\r\n");
      out.write("\t\t],\r\n");
      out.write("\t\ttarget: 'map',\r\n");
      out.write("\t\tview: new ol.View({\r\n");
      out.write("\t\t\tcenter: ol.proj.transform([128.6820,35.8346], 'EPSG:4326', 'EPSG:900913'),\r\n");
      out.write("\t\t\tzoom: 16,\r\n");
      out.write("\t\t\tminZoom : 0,\r\n");
      out.write("\t\t\tmaxZoom : 21\r\n");
      out.write("\t\t})\r\n");
      out.write("\t});\r\n");
      out.write("            \r\n");
      out.write("//////////////////////////////////////////////////\r\n");
      out.write("\tvar markerSource; //검색시 생성되는 마커 -> 기존에 마커를 삭제하기 위하여 search function 밖에서 값 생성\r\n");
      out.write("\t\r\n");
      out.write("\tvar search = function(){\r\n");
      out.write("\t\t\r\n");
      out.write("        \r\n");
      out.write("        if(markerSource==null){ //첫 검색시 마커소스가 null 임으로 새로운 벡터레이어 생성\r\n");
      out.write("            \r\n");
      out.write("            markerSource = new ol.source.Vector();\r\n");
      out.write("            \r\n");
      out.write("        \r\n");
      out.write("        }else if(markerSource !=null){ //전에 검색해서 생성된 레이어 모두 삭제\r\n");
      out.write("            markerLayer.getSource().clear();\r\n");
      out.write("        }\r\n");
      out.write("        markerSource.set(\"name\",\"마커레이어\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: \"get\",\r\n");
      out.write("\t\t\t\turl: \"https://api.vworld.kr/req/search\",\r\n");
      out.write("\t\t\t\tdata : $('#searchForm').serialize(),\r\n");
      out.write("\t\t\t\tdataType: 'jsonp',\r\n");
      out.write("\t\t\t\tasync: false,\r\n");
      out.write("\t\t\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\t\t\tvar features = new Array();\r\n");
      out.write("\t\t\t\t\tif(data.response.status ==\"NOT_FOUND\"){\r\n");
      out.write("\t\t\t\t\t\talert(\"검색결과가 없습니다.\");\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t$('p.notice').show();\r\n");
      out.write("\t\t\t\t\t\t$('p.noticePrev').hide();\r\n");
      out.write("\t\t\t\t\t\tvar result_html =\"\";\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tfor(var o in data.response.result.items){ \r\n");
      out.write("\t\t\t\t\t\t\t/*if(o==0){\t\t\t//검색 결과가있을시 검색결과의 첫번째 값 좌표로 이동\r\n");
      out.write("\t\t\t\t\t\t\t\tmove(data.response.result.items[o].point.x*1,data.response.result.items[o].point.y*1);\r\n");
      out.write("\t\t\t\t\t\t\t}*/\r\n");
      out.write("\t\t\t\t\t\t\tvar x = data.response.result.items[o].point.x*1;\r\n");
      out.write("\t                        var y = data.response.result.items[o].point.y*1\r\n");
      out.write("\t                        var point_feature = new ol.Feature({\r\n");
      out.write("\t                            geometry: new ol.geom.Point([x, y]).transform('EPSG:900913', 'EPSG:3857')\r\n");
      out.write("\t                        });\r\n");
      out.write("\t                        //style을 활용해서, point의 style을 변경한다.\r\n");
      out.write("\t                        var markerStyle = new ol.style.Style({\r\n");
      out.write("\t                            image: new ol.style.Icon({ //마커 이미지\r\n");
      out.write("\t                                opacity: 1, //투명도 1=100% \r\n");
      out.write("\t                                scale: 1, //크기 1=100%\r\n");
      out.write("\r\n");
      out.write("\t                                //marker 이미지, 해당 point를 marker로 변경한다.\r\n");
      out.write("\t                                src: 'https://openlayers.org/en/v3.20.1/examples/data/icon.png'\r\n");
      out.write("\t                            }),\r\n");
      out.write("\t                            //html의 css, z-index 기능이다.\r\n");
      out.write("\t                            setZindex: 1200\r\n");
      out.write("\t                        });\r\n");
      out.write("\t                        //markerSource에 등록한 point를 담는다. addFeature를 이용해서, 여러개의 point를 source에 담는다.\r\n");
      out.write("\t                        markerSource.addFeature(point_feature);\r\n");
      out.write("\t                        \r\n");
      out.write("\t                        // 마커 레이어 생성\r\n");
      out.write("\t                        markerLayer = new ol.layer.Vector({\r\n");
      out.write("\t                            source: markerSource, //마커 feacture들\r\n");
      out.write("\t                            style: markerStyle //마커 스타일\r\n");
      out.write("\t                        });\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tresult_html += \"<hr><li><p onclick='move(\"+data.response.result.items[o].point.x+\",\"+data.response.result.items[o].point.y+\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\")'> 도로명: \"+ data.response.result.items[o].address.road +\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\" 지번: \"+ data.response.result.items[o].address.parcel +\"  </p></li>\";\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tmap.addLayer(markerLayer);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t//console.log(result_html);\r\n");
      out.write("\t\t\t\t\t\t$('#result_ajax').html(result_html);  //result_ajax 라는 id 값이 있는곳의 html을 수정한다 \r\n");
      out.write("\t\t\t\t\t\t$('#result_count').text(data.response.record.total+\"건이 검색되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\talert(data.response.record.total+\"건이 검색되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tcomplete:function(){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror: function(xhr, stat, err) {}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar test = \"test\";\r\n");
      out.write("\r\n");
      out.write("\t\tvar move = function(x,y){\r\n");
      out.write("\t\t\tmap.getView().setCenter([ x, y ]); // 지도 이동\r\n");
      out.write("\t\t\tmap.getView().setZoom(17); // 줌레벨 설정\r\n");
      out.write("\t\t\t//검색마커생성\r\n");
      out.write("\t\t\t//console.log(test);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//////////////////////////////////////////////////\r\n");
      out.write("    map.on('pointermove', pointerMoveHandler);\r\n");
      out.write("\r\n");
      out.write("    map.getViewport().addEventListener('mouseout', function () {\r\n");
      out.write("        helpTooltipElement.classList.add('hidden');\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    var typeSelect = document.getElementById('type');\r\n");
      out.write("\r\n");
      out.write("    var draw; \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    var formatLength = function (line) {\r\n");
      out.write("        var length = ol.sphere.getLength(line);\r\n");
      out.write("        var output;\r\n");
      out.write("        if (length > 100) {\r\n");
      out.write("            output = (Math.round(length / 1000 * 100) / 100) +\r\n");
      out.write("                ' ' + 'km';\r\n");
      out.write("        } else {\r\n");
      out.write("            output = (Math.round(length * 100) / 100) +\r\n");
      out.write("                ' ' + 'm';\r\n");
      out.write("        }\r\n");
      out.write("        return output;\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    var formatArea = function (polygon) {\r\n");
      out.write("        var area = ol.sphere.getArea(polygon);\r\n");
      out.write("        var output;\r\n");
      out.write("        if (area > 10000) {\r\n");
      out.write("            output = (Math.round(area / 1000000 * 100) / 100) +\r\n");
      out.write("                ' ' + 'km<sup>2</sup>';\r\n");
      out.write("        } else {\r\n");
      out.write("            output = (Math.round(area * 100) / 100) +\r\n");
      out.write("                ' ' + 'm<sup>2</sup>';\r\n");
      out.write("        }\r\n");
      out.write("        return output;\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("    function addInteraction() {\r\n");
      out.write("        var type = '';\r\n");
      out.write("        if (typeSelect.value == 'area') {\r\n");
      out.write("            type = 'Polygon';\r\n");
      out.write("        } else if (typeSelect.value == 'length') {\r\n");
      out.write("            type = 'LineString';\r\n");
      out.write("        } else if (typeSelect.value == 'Circle') {\r\n");
      out.write("            type = 'Circle';\r\n");
      out.write("        } else if (typeSelect.value == 'Point') {\r\n");
      out.write("            type = 'Point';\r\n");
      out.write("        } else if (typeSelect.value == 'Select') {\r\n");
      out.write("            var select; \r\n");
      out.write("            select = new ol.interaction.Select({\r\n");
      out.write("                //condition: ol.events.condition.pointerMove\r\n");
      out.write("                condition: ol.events.condition.click\r\n");
      out.write("            })\r\n");
      out.write("            select.set(\"이벤트\", \"선택\");\r\n");
      out.write("            select.on(\"select\", function (evt) {\r\n");
      out.write("                var length = evt.target.getFeatures().getLength();\r\n");
      out.write("                if (length > 0) {\r\n");
      out.write("                    //console.log(length);\r\n");
      out.write("                    subj = evt.target.getFeatures().getArray()[0].get(\"subj\"); //객체에 저장된 제목과 내용 찾은후 저장\r\n");
      out.write("                    cont = evt.target.getFeatures().getArray()[0].get(\"cont\");\r\n");
      out.write("                    document.getElementById('subj').value = subj; //저장된 내용을 표출\r\n");
      out.write("                    document.getElementById('cont').value = cont;\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("            map.addInteraction(select);\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        draw = new ol.interaction.Draw({ //맵에 그리기 완료 후 맵에 표기\r\n");
      out.write("            source: source,\r\n");
      out.write("            type: type,\r\n");
      out.write("            style: new ol.style.Style({\r\n");
      out.write("                fill: new ol.style.Fill({\r\n");
      out.write("                    color: 'rgba(255, 255, 255, 0.2)'\r\n");
      out.write("                }),\r\n");
      out.write("                stroke: new ol.style.Stroke({\r\n");
      out.write("                    color: 'rgba(0, 0, 0, 0.5)',\r\n");
      out.write("                    lineDash: [10, 10],\r\n");
      out.write("                    width: 5\r\n");
      out.write("                }),\r\n");
      out.write("                image: new ol.style.Circle({\r\n");
      out.write("                    radius: 5,\r\n");
      out.write("                    stroke: new ol.style.Stroke({\r\n");
      out.write("                        color: 'rgba(0, 0, 0, 0.7)'\r\n");
      out.write("                    }),\r\n");
      out.write("                    fill: new ol.style.Fill({\r\n");
      out.write("                        color: 'rgba(255, 255, 255, 0.2)'\r\n");
      out.write("                    })\r\n");
      out.write("                })\r\n");
      out.write("            })\r\n");
      out.write("        });\r\n");
      out.write("        map.addInteraction(draw);\r\n");
      out.write("\r\n");
      out.write("        createMeasureTooltip();\r\n");
      out.write("        createHelpTooltip();\r\n");
      out.write("\r\n");
      out.write("        var listener;\r\n");
      out.write("        draw.on('drawstart',\r\n");
      out.write("            function (evt) {\r\n");
      out.write("                sketch = evt.feature;\r\n");
      out.write("\r\n");
      out.write("                var tooltipCoord = evt.coordinate;\r\n");
      out.write("\r\n");
      out.write("                listener = sketch.getGeometry().on('change', function (evt) {\r\n");
      out.write("                    var geom = evt.target;\r\n");
      out.write("                    var output;\r\n");
      out.write("                    if (geom instanceof ol.geom.Polygon) {\r\n");
      out.write("                        output = formatArea(geom);\r\n");
      out.write("                        tooltipCoord = geom.getInteriorPoint().getCoordinates();\r\n");
      out.write("                    } else if (geom instanceof ol.geom.LineString) {\r\n");
      out.write("                        output = formatLength(geom);\r\n");
      out.write("                        tooltipCoord = geom.getLastCoordinate();\r\n");
      out.write("                    } else if (geom instanceof ol.geom.Circle) {//거리계산 구현\r\n");
      out.write("                        var length = ol.sphere.getDistance(ol.proj.transform(geom.getCenter(), 'EPSG:900913', 'EPSG:4326'), ol.proj.transform(geom.getLastCoordinate(), 'EPSG:900913', 'EPSG:4326'), 6378137)\r\n");
      out.write("                        if (length > 100) {\r\n");
      out.write("                            output = (Math.round(length / 1000 * 100) / 100) +\r\n");
      out.write("                                ' ' + 'km';\r\n");
      out.write("                        } else {\r\n");
      out.write("                            output = (Math.round(length * 100) / 100) +\r\n");
      out.write("                                ' ' + 'm';\r\n");
      out.write("                        }\r\n");
      out.write("                        tooltipCoord = geom.getLastCoordinate();\r\n");
      out.write("                    }\r\n");
      out.write("                    measureTooltipElement.innerHTML = output;\r\n");
      out.write("                    measureTooltip.setPosition(tooltipCoord);\r\n");
      out.write("                });\r\n");
      out.write("            }, this);\r\n");
      out.write("\r\n");
      out.write("        draw.on('drawend',\r\n");
      out.write("            function (evt) {\r\n");
      out.write("                feature = evt.feature;\r\n");
      out.write("                feature.set(\"subj\", document.getElementById('subj').value); //지도에 그릴시 내용을 feature 저장\r\n");
      out.write("                feature.set(\"cont\", document.getElementById('cont').value);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("                measureTooltipElement.className = 'tooltip tooltip-static';\r\n");
      out.write("                measureTooltip.setOffset([0, -7]);\r\n");
      out.write("                // unset sketch\r\n");
      out.write("                sketch = null;\r\n");
      out.write("                // unset tooltip so that a new one can be created\r\n");
      out.write("                measureTooltipElement = null;\r\n");
      out.write("                createMeasureTooltip();\r\n");
      out.write("                ol.Observable.unByKey(listener);\r\n");
      out.write("            }, this);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function createHelpTooltip() {\r\n");
      out.write("        if (helpTooltipElement) {\r\n");
      out.write("            helpTooltipElement.parentNode.removeChild(helpTooltipElement);\r\n");
      out.write("        }\r\n");
      out.write("        helpTooltipElement = document.createElement('div');\r\n");
      out.write("        helpTooltipElement.className = 'tooltip hidden';\r\n");
      out.write("        helpTooltip = new ol.Overlay({\r\n");
      out.write("            element: helpTooltipElement,\r\n");
      out.write("            offset: [15, 0],\r\n");
      out.write("            positioning: 'center-left'\r\n");
      out.write("        });\r\n");
      out.write("        map.addOverlay(helpTooltip);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function createMeasureTooltip() {\r\n");
      out.write("        if (measureTooltipElement) {\r\n");
      out.write("            measureTooltipElement.parentNode.removeChild(measureTooltipElement);\r\n");
      out.write("        }\r\n");
      out.write("        measureTooltipElement = document.createElement('div');\r\n");
      out.write("        measureTooltipElement.className = 'tooltip tooltip-measure';\r\n");
      out.write("        measureTooltip = new ol.Overlay({\r\n");
      out.write("            element: measureTooltipElement,\r\n");
      out.write("            offset: [0, -15],\r\n");
      out.write("            positioning: 'bottom-center'\r\n");
      out.write("        });\r\n");
      out.write("        map.addOverlay(measureTooltip);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    typeSelect.onchange = function () {\r\n");
      out.write("        map.removeInteraction(draw);\r\n");
      out.write("        map.getInteractions().getArray().forEach(function (i) {\r\n");
      out.write("            if (i.get(\"이벤트\") == \"선택\") {\r\n");
      out.write("                map.removeInteraction(i);\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("        addInteraction();\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("    addInteraction();\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/jsp/egovframework/example/hjb/hjbMap.jsp(307,10) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("http://map.vworld.kr/images/ol3/marker_blue.png");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /WEB-INF/jsp/egovframework/example/hjb/hjbMap.jsp(309,47) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("http://map.vworld.kr/images/ol3/marker_blue.png");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f2_reused = false;
    try {
      _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f2.setParent(null);
      // /WEB-INF/jsp/egovframework/example/hjb/hjbMap.jsp(312,10) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f2.setValue("http://map.vworld.kr/images/ol3/marker.png");
      int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
      if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
      _jspx_th_c_005furl_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f2, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f3 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f3_reused = false;
    try {
      _jspx_th_c_005furl_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f3.setParent(null);
      // /WEB-INF/jsp/egovframework/example/hjb/hjbMap.jsp(313,47) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f3.setValue("http://map.vworld.kr/images/ol3/marker.png");
      int _jspx_eval_c_005furl_005f3 = _jspx_th_c_005furl_005f3.doStartTag();
      if (_jspx_th_c_005furl_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
      _jspx_th_c_005furl_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f3, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f4 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f4_reused = false;
    try {
      _jspx_th_c_005furl_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f4.setParent(null);
      // /WEB-INF/jsp/egovframework/example/hjb/hjbMap.jsp(316,10) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f4.setValue("https://openlayers.org/en/v3.20.1/examples/data/icon.png");
      int _jspx_eval_c_005furl_005f4 = _jspx_th_c_005furl_005f4.doStartTag();
      if (_jspx_th_c_005furl_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f4);
      _jspx_th_c_005furl_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f4, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f5 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f5_reused = false;
    try {
      _jspx_th_c_005furl_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f5.setParent(null);
      // /WEB-INF/jsp/egovframework/example/hjb/hjbMap.jsp(317,47) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f5.setValue("https://openlayers.org/en/v3.20.1/examples/data/icon.png");
      int _jspx_eval_c_005furl_005f5 = _jspx_th_c_005furl_005f5.doStartTag();
      if (_jspx_th_c_005furl_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f5);
      _jspx_th_c_005furl_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f5, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f5_reused);
    }
    return false;
  }
}
