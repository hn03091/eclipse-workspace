<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
<!-- jquery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- openlayers -->
<link rel="stylesheet"
	href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
<script src="https://openlayers.org/en/v4.6.5/build/ol.js"></script>

<!-- proj4js-->
<script
	src="https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.6.2/proj4.js"></script>
<style>
body {
	margin: 0;
}

.map {
	width: 100%;
	height: 100%;
}

#baseLayer {
	position: absolute;
	right: 10px;
	top: 10px;
	z-index: 1;
}
</style>
<meta charset="UTF-8">
<title>홍정범</title>
</head>
<body>
    <div id="map" class="map">
        <select id="baseLayer"></select>
    </div>
    <div id="mouseCoordinate"></div>
		<span>
			<button type="button" onclick="javascript:marker();" name="addpin">마커찍기</button>
		</span>
		<div>
			<label><input type="checkbox" id="color" value="blue"
				checked="on">BLUE</label> <label><input type="checkbox"
				id="color" value="red">RED</label> <label><input
				type="checkbox" id="color" value="green">GREEN</label>
		</div>
	

</body>
<script>
/*overviewmap 생성하기	
var overViewMapCtrl = new ol.control.OverviewMap({
    layers: [
      new ol.layer.Tile({
        source: source,
      })],
    collapsed: false,
});*/
//마우스좌표
var mouseControlCoordinate = new ol.control.MousePosition({
	coordinateFormat : new ol.coordinate.createStringXY(4),
	projection : 'EPSG:4326',//좌표계 설정
	className : 'mposition', //css 클래스 이름
	target : document.getElementById('mouseCoordinate'),//좌표를 뿌릴 element
});

        // dom ready
        $(document).ready(function() {
            init();
        });
    
        function init() {
        	//마우스좌표
    		var mouseControlCoordinate = new ol.control.MousePosition({
    			coordinateFormat : new ol.coordinate.createStringXY(4),
    			projection : 'EPSG:3857',//좌표계 설정
    			className : 'mposition', //css 클래스 이름
    			target : document.getElementById('mouseCoordinate'),//좌표를 뿌릴 element
    		});

            // 좌표계 설정
            initProj();
        	
            // map 생성
            var map = new ol.Map({
                target: 'map',                          // Map 생성할 div id
                view: new ol.View({
                    center: [54300000, 4300000],        // 초기 지도 위치 좌표
                    zoom: 8                             // 초기 지도 위치 줌레벨
                }),
                logo: false,
    			controls : new ol.control.defaults()
				.extend([ mouseControlCoordinate ]) //마우스좌표
                }),
            };
            
            // 배경지도 레이어 추가
            addBaseLayer(map);
 
            // 배경지도 선택 select
            initBaseLayerSelect(map);
 
        }
        function marker() {
			mapView.on('click', function(e) {
				//console.log(e.coordinate);
				var x = e.coordinate[0];
				var y = e.coordinate[1];
				let imgLength = $('input:checkbox[id="color"]:checked').length;
				let color = $('input:checkbox[id="color"]:checked').val();

				if (imgLength != 1) {
					alert("색상을 하나만 선택하여주세요");
					return false;
				}

				//point Geometry 객체를 생성한다.
				var point = new ol.geom.Point([ x, y ]);

				var pointSourceLayer = new ol.source.Vector({
					features : [ new ol.Feature(point) ]
				});
				//레이어 생성할 때 스타일을 지정해준다.
				var pointVectorLayer = new ol.layer.Vector({
					source : pointSourceLayer,
					style : new ol.style.Style({
						image : new ol.style.Circle({
							radius : 5,
							fill : new ol.style.Fill({
								color : color
							}),
						})
					})
				});

				this.addLayer(pointVectorLayer);
			})
		}
 
        function initProj() {
 
            // google 좌표계
            proj4.defs('EPSG:3857', '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs');
 
            // UTM-K 좌표계
            proj4.defs('EPSG:5179', '+proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.9996 +x_0=1000000 +y_0=2000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs');
 
            // 중부원점(GRS80) [200,000 500,000]
            proj4.defs('EPSG:5181', '+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=GRS80 +units=m +no_defs');
 
        }
 
        function addBaseLayer(map) {
 

 
            // ------------------------------
            // vworld layers
            // ------------------------------
            // vworld base
            var vworldBaseLayer = new ol.layer.Tile({
                source: new ol.source.XYZ({
                    projection : 'EPSG:3857',
                    url : 'https://xdworld.vworld.kr/2d/Base/service/{z}/{x}/{y}.png',
                    crossOrigin: 'anonymous'
                }),
                id: 'vworld_base',
                visible: false
            });
            map.addLayer(vworldBaseLayer);
 
            // vworld satellite
            var vworldSatelliteLayer = new ol.layer.Tile({
                source: new ol.source.XYZ({
                    projection : 'EPSG:3857',
                    url : 'https://xdworld.vworld.kr/2d/Satellite/service/{z}/{x}/{y}.jpeg',
                    crossOrigin: 'anonymous'
                }),
                id: 'vworld_satellite',
                visible: false
            });
            map.addLayer(vworldSatelliteLayer);
 
            // vworld hybrid
            var vworldHybridLayer = new ol.layer.Tile({
                source: new ol.source.XYZ({
                    projection : 'EPSG:3857',
                    url : 'https://xdworld.vworld.kr/2d/Hybrid/service/{z}/{x}/{y}.png',
                    crossOrigin: 'anonymous'
                }),
                id: 'vworld_hybrid',
                visible: false
            });
            map.addLayer(vworldHybridLayer);
 
            // vworld gray
            var vworldGrayLayer = new ol.layer.Tile({
                source: new ol.source.XYZ({
                    projection : 'EPSG:3857',
                    url : 'https://xdworld.vworld.kr/2d/gray/service/{z}/{x}/{y}.png',
                    crossOrigin: 'anonymous'
                }),
                id: 'vworld_gray',
                visible: false
            });
            map.addLayer(vworldGrayLayer);
 
            // vworld_midnight
            var vworldMidnightLayer = new ol.layer.Tile({
                source: new ol.source.XYZ({
                    projection : 'EPSG:3857',
                    url : 'https://xdworld.vworld.kr/2d/midnight/service/{z}/{x}/{y}.png',
                    crossOrigin: 'anonymous'
                }),
                id: 'vworld_midnight',
                visible: false
            });
            map.addLayer(vworldMidnightLayer);
 

 
            function getDaumTileUrlFunction(type) {
 
                var tileUrlFunction = function(tileCoord, pixelRatio, projection) {
 
                    var res = this.getTileGrid().getResolutions();
                    var sVal = res[tileCoord[0]];
                    
                    var yLength = 988576 - (-60000) + 524288 + 524288;
                    var yTile = yLength / (sVal * this.getTileGrid().getTileSize());
 
                    var tileGap = Math.pow(2, (tileCoord[0] -1));
                    yTile = yTile - tileGap;
                    
                    var xTile = tileCoord[1] - tileGap;
            
                    if (type == 'base') {
                        return 'http://map' + Math.floor( (Math.random() * (4 - 1 + 1)) + 1 ) + '.daumcdn.net/map_2d_hd/2111ydg/L' + (15 - tileCoord[0]) + '/' + (yTile + tileCoord[2]) + '/' + xTile + '.png';
                    } else if (type == 'satellite') {
                        return 'https://map' + Math.floor( (Math.random() * (4 - 1 + 1)) + 1 ) + '.daumcdn.net/map_skyview_hd/L' + (15 - tileCoord[0]) + '/' + (yTile + tileCoord[2]) + '/' + xTile + '.jpg';
                    } else if (type == 'hybrid') {
                        return 'http://map' + Math.floor( (Math.random() * (4 - 1 + 1)) + 1 ) + '.daumcdn.net/map_hybrid_hd/2111ydg/L' + (15 - tileCoord[0]) + '/' + (yTile + tileCoord[2]) + '/' + xTile + '.png';
                    }
 
                };
 
                return tileUrlFunction;
 
            }

        }
 
        function initBaseLayerSelect(map) {
 
            // add select option
            var html = '';
            $.each(map.getLayers().getArray(), function(i, v) {
                html += '<option value="' + v.get('id') + '">' + v.get('id') + '</option>';
            });
            $('#baseLayer').append(html);
 
            // select event
            $('#baseLayer').change(function() {
 
                var layerId = $(this).val();
                $.each(map.getLayers().getArray(), function(i, v) {
                    if (layerId == v.get('id')) {
                        v.setVisible(true);
                    } else {
                        v.setVisible(false);
                    }
                });
 
            });
 
            // 초기값
            $('#baseLayer').val('naver_base').trigger('change');
 
        }
    
    </script>
</html>